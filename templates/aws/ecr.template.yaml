AWSTemplateFormatVersion: "2010-09-09"
Description: 'The Boring Paper Co Repo and OIDC IAM Role for GitHub'
Parameters:
  RepositoryNames:
    Type: CommaDelimitedList
    Description: "Comma-separated list of repository names"
    Default: "frontend,backend,orders,terminal,lazymode"
  GitHubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider. Just Ignore.
    Default: ""
    Type: String
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: "sts.amazonaws.com"
    Type: String

Conditions:
  CreateOIDCProvider: !Equals 
    - !Ref OIDCProviderArn
    - ""

Resources:
  # Create ECR Repositories
  FrontendECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Select [0, !Ref RepositoryNames]

  BackendECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Select [1, !Ref RepositoryNames]

  OrdersECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Select [2, !Ref RepositoryNames]

  TerminalECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Select [3, !Ref RepositoryNames]

  LazymodeECR:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Select [4, !Ref RepositoryNames]
  
  Role:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns: [arn:aws:iam::aws:policy/AdministratorAccess]
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If 
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*

  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList: 
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

Outputs:
  GithubRole:
    Value: !GetAtt Role.Arn
  ECRBaseUrl:
    Value: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com"